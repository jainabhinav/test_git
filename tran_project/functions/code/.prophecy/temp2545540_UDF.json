{"initCode":"","code":"udf((_in_pricing_terms: Seq[Row], _l_pricing_terms: Seq[Row], _i: Integer, _magnitude: Double) => {\n  var l_pricing_terms = (_l_pricing_terms).toArray\nvar i = _i \nvar in_pricing_terms = (_in_pricing_terms).toArray\nvar magnitude = _magnitude\n\nwhile(compareTo(i, l_pricing_terms.length) < 0) {\nif(!_isnull(in_pricing_terms(convertToInt(i)).getAs[Double](\"amount\"))){\nl_pricing_terms(i) = Row(l_pricing_terms(convertToInt(i)).getAs[Integer](\"term_id\"), l_pricing_terms(convertToInt(i)).getAs[Double](\"amount\") / magnitude, l_pricing_terms(convertToInt(i)).getAs[Double](\"rate\"), l_pricing_terms(convertToInt(i)).getAs[Boolean](\"is_deduction\"), l_pricing_terms(convertToInt(i)).getAs[Boolean](\"is_media_cost_dependent\"), l_pricing_terms(convertToInt(i)).getAs[Integer](\"data_member_id\"))\n}\ni = i + convertToInt(1)\n}\n\nRow(l_pricing_terms.map{x => if (!_isnull(x)) {\n Row(convertToInt(x.get(0)), x.get(1), x.get(2), x.get(3), x.get(4), convertToInt(x.get(5)))\n} else {\n null\n}}.toArray, convertToInt(i))\n},  StructType(\n      List(\n      StructField(\"l_pricing_terms\", ArrayType( StructType(\n      List(\n      StructField(\"term_id\", IntegerType, true),StructField(\"amount\", DoubleType, true),StructField(\"rate\", DoubleType, true),StructField(\"is_deduction\", BooleanType, true),StructField(\"is_media_cost_dependent\", BooleanType, true),StructField(\"data_member_id\", IntegerType, true)\n      )\n    )), false),StructField(\"i\", IntegerType, false)\n      )\n    ))"}