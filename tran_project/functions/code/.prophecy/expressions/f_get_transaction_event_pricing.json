{"parameters":[{"name":"impression_transaction_event_pricing","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"auction_transaction_event_pricing","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"buyer_charges","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"seller_charges","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"should_process_views","type":"column","metadata":{"description":"","tags":[],"mappings":[]}}],"output":{"type":"struct","fields":[{"name":"gross_payment_value_microcents","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"net_payment_value_microcents","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"seller_revenue_microcents","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"buyer_charges","type":{"type":"struct","fields":[{"name":"rate_card_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"member_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"is_dw","type":"boolean","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"pricing_terms","type":{"type":"array","elementType":{"type":"struct","fields":[{"name":"term_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"amount","type":"double","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"rate","type":"double","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"is_deduction","type":"boolean","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"is_media_cost_dependent","type":"boolean","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"data_member_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}}]},"containsNull":true},"nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"fx_margin_rate_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"marketplace_owner_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"virtual_marketplace_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"amino_enabled","type":"boolean","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}}]},"nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"seller_charges","type":{"type":"struct","fields":[{"name":"rate_card_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"member_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"is_dw","type":"boolean","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"pricing_terms","type":{"type":"array","elementType":{"type":"struct","fields":[{"name":"term_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"amount","type":"double","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"rate","type":"double","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"is_deduction","type":"boolean","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"is_media_cost_dependent","type":"boolean","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"data_member_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}}]},"containsNull":true},"nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"fx_margin_rate_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"marketplace_owner_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"virtual_marketplace_id","type":"integer","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"amino_enabled","type":"boolean","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}}]},"nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"buyer_transacted","type":"boolean","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"seller_transacted","type":"boolean","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}}]},"isCustomSchemaEnabled":true,"code":"var l_transaction_event_pricing = impression_transaction_event_pricing\n    var ltep_gross_payment_value_microcents: Column = when((should_process_views === lit(1))\n      .and(\n        is_not_null(\n          auction_transaction_event_pricing.getField(\"buyer_transacted\")\n        )\n      )\n      .and(\n        auction_transaction_event_pricing\n          .getField(\"buyer_transacted\") === lit(1)\n      ), auction_transaction_event_pricing.getField(\"gross_payment_value_microcents\")).otherwise(impression_transaction_event_pricing.getField(\"gross_payment_value_microcents\"))\n\n    var ltep_net_payment_value_microcents: Column = when((should_process_views === lit(1))\n      .and(\n        is_not_null(\n          auction_transaction_event_pricing.getField(\"buyer_transacted\")\n        )\n      )\n      .and(\n        auction_transaction_event_pricing\n          .getField(\"buyer_transacted\") === lit(1)\n      ), auction_transaction_event_pricing.getField(\"net_payment_value_microcents\")).otherwise(impression_transaction_event_pricing.getField(\"net_payment_value_microcents\"))\n    var ltep_seller_revenue_microcents: Column = when((should_process_views === lit(1))\n      .and(\n        is_not_null(\n          auction_transaction_event_pricing.getField(\"seller_transacted\")\n        )\n      )\n      .and(\n        auction_transaction_event_pricing\n          .getField(\"seller_transacted\") === lit(1)\n      ), auction_transaction_event_pricing.getField(\"seller_revenue_microcents\")).otherwise(impression_transaction_event_pricing.getField(\"seller_revenue_microcents\"))\n\n    var ltep_buyer_transacted: Column = when((should_process_views === lit(1))\n      .and(\n        is_not_null(\n          auction_transaction_event_pricing.getField(\"buyer_transacted\")\n        )\n      )\n      .and(\n        auction_transaction_event_pricing\n          .getField(\"buyer_transacted\") === lit(1)\n      ), auction_transaction_event_pricing.getField(\"buyer_transacted\")).otherwise(impression_transaction_event_pricing.getField(\"buyer_transacted\"))\n    var ltep_seller_transacted: Column = when((should_process_views === lit(1))\n      .and(\n        is_not_null(\n          auction_transaction_event_pricing.getField(\"seller_transacted\")\n        )\n      )\n      .and(\n        auction_transaction_event_pricing\n          .getField(\"seller_transacted\") === lit(1)\n      ), auction_transaction_event_pricing.getField(\"seller_transacted\")).otherwise(impression_transaction_event_pricing.getField(\"seller_transacted\"))\n\n    val ltep_buyer_charges: Column = when((should_process_views === lit(1))\n      .and(\n        is_not_null(\n          auction_transaction_event_pricing.getField(\"buyer_transacted\")\n        )\n      )\n      .and(\n        auction_transaction_event_pricing\n          .getField(\"buyer_transacted\") === lit(1)\n      ), auction_transaction_event_pricing.getField(\"buyer_charges\")).otherwise(impression_transaction_event_pricing.getField(\"buyer_charges\"))\n\n    val ltep_seller_charges: Column = when((should_process_views === lit(1))\n      .and(\n        is_not_null(\n          auction_transaction_event_pricing.getField(\"seller_transacted\")\n        )\n      )\n      .and(\n        auction_transaction_event_pricing\n          .getField(\"seller_transacted\") === lit(1)\n      ), auction_transaction_event_pricing.getField(\"seller_charges\")).otherwise(impression_transaction_event_pricing.getField(\"seller_charges\"))\n\n    val ltep_buyer_charges2: Column = when(is_not_null(buyer_charges), struct(\n      buyer_charges.getField(\"rate_card_id\").as(\"rate_card_id\"),\n      buyer_charges.getField(\"member_id\").as(\"member_id\"),\n      buyer_charges.getField(\"is_dw\").as(\"is_dw\"),\n      ltep_buyer_charges.getField(\"pricing_terms\").as(\"pricing_terms\"),\n      buyer_charges.getField(\"fx_margin_rate_id\").as(\"fx_margin_rate_id\"),\n      buyer_charges.getField(\"marketplace_owner_id\").as(\"marketplace_owner_id\"),\n      buyer_charges.getField(\"virtual_marketplace_id\").as(\"virtual_marketplace_id\"),\n      buyer_charges.getField(\"amino_enabled\").as(\"amino_enabled\")\n    )).otherwise(ltep_buyer_charges)\n\n    val ltep_seller_charges2: Column = when(is_not_null(seller_charges), struct(\n      seller_charges.getField(\"rate_card_id\").as(\"rate_card_id\"),\n      seller_charges.getField(\"member_id\").as(\"member_id\"),\n      seller_charges.getField(\"is_dw\").as(\"is_dw\"),\n      ltep_seller_charges.getField(\"pricing_terms\").as(\"pricing_terms\"),\n      seller_charges.getField(\"fx_margin_rate_id\").as(\"fx_margin_rate_id\"),\n      seller_charges.getField(\"marketplace_owner_id\").as(\"marketplace_owner_id\"),\n      seller_charges.getField(\"virtual_marketplace_id\").as(\"virtual_marketplace_id\"),\n      seller_charges.getField(\"amino_enabled\").as(\"amino_enabled\")\n    )).otherwise(ltep_seller_charges)\n\n    struct(\n      ltep_gross_payment_value_microcents.as(\"gross_payment_value_microcents\"),\n      ltep_net_payment_value_microcents.as(\"net_payment_value_microcents\"),\n      ltep_seller_revenue_microcents.as(\"seller_revenue_microcents\"),\n      when(is_not_null(ltep_buyer_transacted) and ltep_buyer_transacted =!= lit(1) and ltep_buyer_charges2.getField(\"pricing_terms\").isNull, buyer_charges).otherwise(ltep_buyer_charges2).as(\"buyer_charges\"),\n      when(is_not_null(ltep_seller_transacted) and ltep_seller_transacted =!= lit(1) and ltep_seller_charges2.getField(\"pricing_terms\").isNull, seller_charges).otherwise(ltep_seller_charges2).as(\"seller_charges\"),\n      ltep_buyer_transacted.as(\"buyer_transacted\"),\n      ltep_seller_transacted.as(\"seller_transacted\")\n    )","language":"scala","description":""}