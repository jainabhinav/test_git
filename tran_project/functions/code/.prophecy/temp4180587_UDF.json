{"initCode":"","code":"udf((_l_term_id: Integer, _l_pricing_terms: Seq[Row], _i: Integer, _l_is_deduction: Integer) => {\n  var i = _i \nvar l_curator_margin_type = 0\nvar l_is_deduction = _l_is_deduction\nvar l_pricing_terms = (_l_pricing_terms).toArray\nvar l_term_id = _l_term_id\n\nwhile(compareTo(i, l_pricing_terms.length) < 0) {\nl_term_id = 0\nl_is_deduction = 0\nif(!_isnull(l_pricing_terms(convertToInt(i)).getAs[Integer](\"term_id\"))){\nl_term_id = convertToInt(l_pricing_terms(convertToInt(i)).getAs[Integer](\"term_id\"))\n}\nif(!_isnull(l_pricing_terms(convertToInt(i)).getAs[Boolean](\"is_deduction\"))){\nl_is_deduction = convertToInt(l_pricing_terms(convertToInt(i)).getAs[Boolean](\"is_deduction\"))\n}\nif((l_term_id == 95) && (l_is_deduction == 1)){\nif(!_isnull(l_pricing_terms(convertToInt(i)).getAs[Boolean](\"is_media_cost_dependent\"))){\nif(l_pricing_terms(convertToInt(i)).getAs[Boolean](\"is_media_cost_dependent\") == convertToBoolean(1)){\nl_curator_margin_type = 1\n} else l_curator_margin_type = 2\n}\n}\ni = i + convertToInt(1)\n}\n\nRow(convertToInt(l_is_deduction), convertToInt(i), convertToInt(l_term_id), convertToInt(l_curator_margin_type))\n},  StructType(\n      List(\n      StructField(\"l_is_deduction\", IntegerType, false),StructField(\"i\", IntegerType, false),StructField(\"l_term_id\", IntegerType, false),StructField(\"l_curator_margin_type\", IntegerType, false)\n      )\n    ))"}