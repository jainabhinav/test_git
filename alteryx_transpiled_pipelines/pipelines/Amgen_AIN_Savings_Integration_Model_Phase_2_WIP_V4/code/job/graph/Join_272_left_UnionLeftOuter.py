from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.types import *
from prophecy.utils import *
from prophecy.libs import typed_lit
from job.config.ConfigStore import *
from job.udfs.UDFs import *

def Join_272_left_UnionLeftOuter(spark: SparkSession, in0: DataFrame, in1: DataFrame, ) -> DataFrame:
    return in0\
        .alias("in0")\
        .join(
          in1.alias("in1"),
          (
            ((((((((((((((((((((((((((col("in0.`scenario name`") == col("in1.`scenario name`")) & (col("in0.year") == col("in1.Year"))) & (col("in0.Category") == col("in1.Category"))) & (col("in0.evp") == col("in1.evp"))) & (col("in0.`cost center number`") == col("in1.`cost center number`"))) & (col("in0.hlmc") == col("in1.hlmc"))) & (col("in0.mc") == col("in1.mc"))) & (col("in0.`cost center`") == col("in1.`cost center`"))) & (col("in0.quarter") == col("in1.quarter"))) & (col("in0.site") == col("in1.site"))) & (col("in0.`Planning Account`") == col("in1.`pa account`"))) & (col("in0.`regrouped level 4`") == col("in1.`regrouped level 4`"))) & (col("in0.`Company Code`") == col("in1.`company code`"))) & (col("in0.`Company Description`") == col("in1.company"))) & (col("in0.`Planning Account Description`") == col("in1.`pa account desc`"))) & (col("in0.`Hyperion Category`") == col("in1.`hyperion category`"))) & (col("in0.`Hyperion Category Code`") == col("in1.`hyperion category code`"))) & (col("in0.`CTS v3`") == col("in1.`CTS v3`"))) & (col("in0.`gl account`") == col("in1.`gl account`"))) & (col("in0.`sub mc`") == col("in1.`sub mc`"))) & (col("in0.`material group`") == col("in1.`material group`"))) & (col("in0.`material group description`") == col("in1.`material group description`"))) & (col("in0.`gl account number`") == col("in1.`gl account number`"))) & (col("in0.`OSE Labor`") == col("in1.`OSE Labor`"))) & (col("in0.`scenario type`") == col("in1.`scenario type`"))) & (col("in0.`planning sku`") == col("in1.`planning sku`")))
            & (col("in0.`product description`") == col("in1.`product description`"))
          ),
          "leftouter"
        )\
        .select(col("in1.`material group`").alias("Right_material group"), col("in1.`pa account desc`").alias("pa account desc"), col("in1.`scenario type`").alias("Right_scenario type"), col("in1.AIN_Savings").alias("AIN_Savings"), col("in0.`OSE Labor`").alias("OSE Labor"), col("in1.`OSE Labor`").alias("Right_OSE Labor"), col("in1.`gl account number`").alias("Right_gl account number"), col("in1.`sub mc`").alias("Right_sub mc"), col("in0.`Planning Account Description`").alias("Planning Account Description"), col("in1.`material group description`").alias("Right_material group description"), col("in1.ASHB").alias("Right_ASHB"), col("in0.`scenario name`").alias("scenario name"), col("in1.`hyperion category code`").alias("Right_hyperion category code"), col("in0.`Company Code`").alias("Company Code"), col("in0.`sub mc`").alias("sub mc"), col("in0.site").alias("site"), col("in0.`Non-Opex Adjustments`").alias("Non-Opex Adjustments"), col("in0.`Cash Spend`").alias("Cash Spend"), col("in1.version").alias("Right_version"), col("in0.year").alias("year"), col("in0.`material group`").alias("material group"), col("in0.`Company Description`").alias("Company Description"), col("in0.ASHB").alias("ASHB"), col("in0.quarter").alias("quarter"), col("in0.`Hyperion Category Code`").alias("Hyperion Category Code"), col("in1.company").alias("company"), col("in0.version").alias("version"), col("in0.`scenario type`").alias("scenario type"), col("in1.`CTS v3`").alias("Right_CTS v3"), col("in0.`planning sku`").alias("planning sku"), col("in1.EW_Reduction").alias("EW_Reduction"), col("in0.Sum_Adjusted_Sum_USDAFX").alias("Sum_Adjusted_Sum_USDAFX"), col("in1.`product description`").alias("Right_product description"), col("in1.Group").alias("Right_Group"), col("in0.`cost center number`").alias("cost center number"), col("in0.`Planning Account Actual`").alias("Planning Account Actual"), col("in1.`hyperion category`").alias("Right_hyperion category"), col("in1.`regrouped level 4`").alias("Right_regrouped level 4"), col("in0.`gl account`").alias("gl account"), col("in1.`planning sku`").alias("Right_planning sku"), col("in0.RecordID").alias("RecordID"), col("in0.`Hyperion Category`").alias("Hyperion Category"), col("in0.evp").alias("evp"), col("in0.`CTS v3`").alias("CTS v3"), col("in1.`gl account`").alias("Right_gl account"), col("in1.`pa account`").alias("pa account"), col("in0.Sum_Adjusted_Sum_LCL").alias("Sum_Adjusted_Sum_LCL"), col("in0.Category").alias("Category"), col("in0.`material group description`").alias("material group description"), col("in0.mc").alias("mc"), col("in0.hlmc").alias("hlmc"), col("in0.`Planning Account Description Actual`").alias("Planning Account Description Actual"), col("in1.AIN_Resource_Cost").alias("AIN_Resource_Cost"), col("in0.`regrouped level 4`").alias("regrouped level 4"), col("in0.`cost center`").alias("cost center"), col("in0.`product description`").alias("product description"), col("in0.`Planning Account`").alias("Planning Account"), col("in0.Group").alias("Group"), col("in1.`company code`").alias("Right_company code"), col("in0.Sum_Adjusted_Sum_LCLCFX").alias("Sum_Adjusted_Sum_LCLCFX"), col("in0.`gl account number`").alias("gl account number"))
