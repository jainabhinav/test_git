{
  "metainfo" : {
    "migrationVersions" : {
      "gemBuilderVersion" : "v1",
      "unitTestNullDataMigrated" : true
    },
    "functions" : { },
    "codeGenConfiguration" : {
      "editableConfig" : true,
      "plibVersion" : {
        "mavenVersion" : "8.7.1"
      },
      "sparkConfigJinjaEnabled" : true
    },
    "id" : "1",
    "uri" : "pipelines/test_pipeline",
    "sourceSuggestions" : [ ],
    "pipelineSettingsInfo" : {
      "applicationName" : "test_pipeline",
      "hasApplication" : true,
      "isFunctionsPackageDirDefined" : true,
      "isNullValuesInUnitTestsEnabled" : true
    },
    "language" : "scala",
    "fabricId" : "2121",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "scala",
      "udfs" : [ ],
      "functionPackageName" : "abhinavdemoprophecyioteam.gitmigrationtestold.functions",
      "sharedFunctionPackageNames" : [ "io.prophecy.scalagems.functions", "io.prophecy.warehousegems.functions", "demo_team_abhinav.demo_scala_project.functions" ]
    },
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ {
      "projectUID" : "12651",
      "projectName" : "ProphecySparkBasicsScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "12652",
      "projectName" : "ProphecyWarehouseScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "12135",
      "projectName" : "demo_scala_project",
      "externalDependencies" : [ {
        "type" : "plibMaven",
        "modifiedAt" : "2024-08-13T12:57:38.512199Z",
        "name" : "plibMaven",
        "enabled" : true,
        "version" : "8.7.1",
        "id" : "817591910",
        "createdAt" : "2024-08-13T12:57:38.512153Z",
        "entity" : "Project"
      } ]
    } ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "io.prophecy.pipelines.test_pipeline",
    "configurationVersion" : "v2"
  },
  "connections" : [ {
    "id" : "Gz7eevgxlkhXFUv9bBDC9",
    "source" : "OPfjJaiwFGMNyJ1esF5oc$$3O7FP6XQzMHuESf9fssBM",
    "sourcePort" : "WYKpUUYjhYKaukRJa-uXw$$4dB10xrSs8NdJVPPfr9Tm",
    "target" : "ZSUMQgXIuqwYlJ524MXzy$$ii6wUx7Xf8-1SaAc1aWms",
    "targetPort" : "PDp5tuDlZybYxnECRlmNW$$rjXYtxneniLd4Z81-q5IK"
  }, {
    "id" : "zC0IScQe5cILV6NIt3YKJ",
    "source" : "fM42IUc878uvCdZtAxjNV$$eRdzyiUfE5qugbwm7US53",
    "sourcePort" : "VTyYJupJD-4vOS3iZ3Xz2$$GmJZCy3o1QYq0IX9zVrfo",
    "target" : "RB0iueS__0rSngyQU8ugv$$NJRUqP7k9o_9WgxQ2pBMq",
    "targetPort" : "x0XcTwewg_6yYIa2-OHFF$$b6-fNuO3Q8DEFTKS_GlAM"
  } ],
  "processes" : {
    "OPfjJaiwFGMNyJ1esF5oc$$3O7FP6XQzMHuESf9fssBM" : {
      "id" : "OPfjJaiwFGMNyJ1esF5oc$$3O7FP6XQzMHuESf9fssBM",
      "component" : "Source",
      "metadata" : {
        "label" : "csv_test_old",
        "slug" : "csv_test_old",
        "x" : -1180,
        "y" : -380,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "WYKpUUYjhYKaukRJa-uXw$$4dB10xrSs8NdJVPPfr9Tm",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/csv_test_old"
      }
    },
    "RB0iueS__0rSngyQU8ugv$$NJRUqP7k9o_9WgxQ2pBMq" : {
      "id" : "RB0iueS__0rSngyQU8ugv$$NJRUqP7k9o_9WgxQ2pBMq",
      "component" : "Filter",
      "metadata" : {
        "label" : "Filter_1",
        "slug" : "Filter_1",
        "x" : -1020,
        "y" : -140,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "x0XcTwewg_6yYIa2-OHFF$$b6-fNuO3Q8DEFTKS_GlAM",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "integer",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "TVU3CtB68ZEgn-6GNedRr$$zIxJzx3KJBz-N7qIJyeAh",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "columnsSelector" : [ ],
        "condition" : {
          "format" : "sql",
          "expression" : "true"
        }
      },
      "componentInfo" : {
        "gemId" : "gitUri=https://github.com/jainabhinav/git_demo&subPath=/scala_proj&tag=demo_scala_project/1.2&projectSubscriptionProjectId=12135&path=gems/Filter",
        "projectName" : "demo_scala_project"
      }
    },
    "ZSUMQgXIuqwYlJ524MXzy$$ii6wUx7Xf8-1SaAc1aWms" : {
      "id" : "ZSUMQgXIuqwYlJ524MXzy$$ii6wUx7Xf8-1SaAc1aWms",
      "component" : "Filter",
      "metadata" : {
        "label" : "Filter_2",
        "slug" : "Filter_2",
        "x" : -960,
        "y" : -380,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "PDp5tuDlZybYxnECRlmNW$$rjXYtxneniLd4Z81-q5IK",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "a",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "b",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "c",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "1pcVd7tFjNFXgE1bM6lhh$$b9_UDp8DvSIkKBmqNL5_C",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "columnsSelector" : [ ],
        "condition" : {
          "format" : "sql",
          "expression" : "true"
        }
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/DxEheDCJ_team_5751/DxEheDCJ_project_12651.git&subPath=&tag=0.2.6&projectSubscriptionProjectId=12651&path=gems/Filter",
        "projectName" : "ProphecySparkBasicsScala"
      }
    },
    "fM42IUc878uvCdZtAxjNV$$eRdzyiUfE5qugbwm7US53" : {
      "id" : "fM42IUc878uvCdZtAxjNV$$eRdzyiUfE5qugbwm7US53",
      "component" : "Source",
      "metadata" : {
        "label" : "customers",
        "slug" : "customers",
        "x" : -1240,
        "y" : -160,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "VTyYJupJD-4vOS3iZ3Xz2$$GmJZCy3o1QYq0IX9zVrfo",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "gitUri=https://github.com/jainabhinav/git_demo&subPath=/scala_proj&tag=demo_scala_project/1.2&projectSubscriptionProjectId=12135&path=datasets/customers"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false,
    "autoUpdateOnRun" : false
  }
}