{"initCode":"","code":"udf((_l_data_costs: Seq[Row], _l_member_sales_tax_rate_pct: Double, _i: Integer, _l_data_cost: Row, _data_costs: Seq[Row]) => {\n  var l_data_costs = (_l_data_costs).toArray\nvar l_member_sales_tax_rate_pct = _l_member_sales_tax_rate_pct\nvar i = _i\nvar l_data_cost = _l_data_cost\nvar data_costs = (_data_costs).toArray\n\nwhile(compareTo(i, data_costs.length) < 0) {\nl_data_cost = data_costs(convertToInt(i))\nif(!_isnull(data_costs(convertToInt(i)))){\nl_data_cost = updateIndexInRow(l_data_cost, 1, l_data_cost.getAs[Double](\"cost\") * (1.0 + (l_member_sales_tax_rate_pct / 100.0)))\n}\nl_data_costs = Array.concat(l_data_costs,Array.fill(1)(l_data_cost))\ni = i + convertToInt(1)\n}\n\nRow(l_data_costs.map{x => if (!_isnull(x)) {\n Row(convertToInt(x.get(0)), x.get(1), x.getAs[Seq[Integer]](2).toArray, x.get(3))\n} else {\n null\n}}.toArray, convertToInt(i), if (!_isnull(l_data_cost)) {\n Row(convertToInt(l_data_cost.get(0)), l_data_cost.get(1), l_data_cost.getAs[Seq[Integer]](2).toArray, l_data_cost.get(3))\n} else {\n null\n})\n},  StructType(\n      List(\n      StructField(\"l_data_costs\", ArrayType( StructType(\n      List(\n      StructField(\"data_member_id\", IntegerType, true),StructField(\"cost\", DoubleType, true),StructField(\"used_segments\", ArrayType(IntegerType), false),StructField(\"cost_pct\", DoubleType, true)\n      )\n    )), false),StructField(\"i\", IntegerType, false),StructField(\"l_data_cost\",  StructType(\n      List(\n      StructField(\"data_member_id\", IntegerType, true),StructField(\"cost\", DoubleType, true),StructField(\"used_segments\", ArrayType(IntegerType), false),StructField(\"cost_pct\", DoubleType, true)\n      )\n    ), false)\n      )\n    ))"}