package io.prophecy.pipelines.first_agg_platform_video_analytics.graph.Main_Graph.Validate_Pick_Pixels

import io.prophecy.libs._
import io.prophecy.pipelines.first_agg_platform_video_analytics.udfs.PipelineInitCode._
import io.prophecy.pipelines.first_agg_platform_video_analytics.udfs.UDFs._
import io.prophecy.pipelines.first_agg_platform_video_analytics.udfs.ColumnFunctions._
import io.prophecy.pipelines.first_agg_platform_video_analytics.graph.Main_Graph.Validate_Pick_Pixels.config.Context
import org.apache.spark._
import org.apache.spark.sql._
import org.apache.spark.sql.functions._
import org.apache.spark.sql.types._
import org.apache.spark.sql.expressions._
import java.time._

object Reformat {

  def apply(context: Context, in: DataFrame): DataFrame =
    in.select(
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.date_time").cast(LongType)
        ).cast(LongType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.date_time").cast(LongType)
        ).cast(LongType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.date_time").cast(LongType)
        ).cast(LongType),
        col("others.date_time").cast(LongType)
      ).as("date_time"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.auction_id_64").cast(LongType)
        ).cast(LongType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.auction_id_64").cast(LongType)
        ).cast(LongType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.auction_id_64").cast(LongType)
        ).cast(LongType),
        col("others.auction_id_64").cast(LongType)
      ).as("auction_id_64"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.user_id_64").cast(LongType)
        ).cast(LongType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.user_id_64").cast(LongType)
        ).cast(LongType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.user_id_64").cast(LongType)
        ).cast(LongType),
        col("others.user_id_64").cast(LongType)
      ).as("user_id_64"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.tag_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.tag_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.tag_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.tag_id").cast(IntegerType)
      ).as("tag_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.venue_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.venue_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.venue_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.venue_id").cast(IntegerType)
      ).as("venue_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.inventory_source_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.inventory_source_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.inventory_source_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.inventory_source_id").cast(IntegerType)
      ).as("inventory_source_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.session_frequency").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.session_frequency").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.session_frequency").cast(IntegerType)
        ).cast(IntegerType),
        col("others.session_frequency").cast(IntegerType)
      ).as("session_frequency"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.width").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.width").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.width").cast(IntegerType)
        ).cast(IntegerType),
        col("others.width").cast(IntegerType)
      ).as("width"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.height").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.height").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.height").cast(IntegerType)
        ).cast(IntegerType),
        col("others.height").cast(IntegerType)
      ).as("height"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.geo_country")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.geo_country")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.geo_country")
        ),
        col("others.geo_country")
      ).as("geo_country"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.geo_region")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.geo_region")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.geo_region")
        ),
        col("others.geo_region")
      ).as("geo_region"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.gender")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.gender")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.gender")
        ),
        col("others.gender")
      ).as("gender"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.age").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.age").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.age").cast(IntegerType)
        ).cast(IntegerType),
        col("others.age").cast(IntegerType)
      ).as("age"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_member_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_member_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_member_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.seller_member_id").cast(IntegerType)
      ).as("seller_member_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_member_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_member_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_member_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.buyer_member_id").cast(IntegerType)
      ).as("buyer_member_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.creative_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.creative_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.creative_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.creative_id").cast(IntegerType)
      ).as("creative_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_currency")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_currency")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_currency")
        ),
        col("others.seller_currency")
      ).as("seller_currency"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_currency")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_currency")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_currency")
        ),
        col("others.buyer_currency")
      ).as("buyer_currency"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.advertiser_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.advertiser_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.advertiser_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.advertiser_id").cast(IntegerType)
      ).as("advertiser_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.campaign_group_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.campaign_group_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.campaign_group_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.campaign_group_id").cast(IntegerType)
      ).as("campaign_group_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.campaign_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.campaign_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.campaign_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.campaign_id").cast(IntegerType)
      ).as("campaign_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.creative_freq").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.creative_freq").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.creative_freq").cast(IntegerType)
        ).cast(IntegerType),
        col("others.creative_freq").cast(IntegerType)
      ).as("creative_freq"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.creative_rec").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.creative_rec").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.creative_rec").cast(IntegerType)
        ).cast(IntegerType),
        col("others.creative_rec").cast(IntegerType)
      ).as("creative_rec"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_learn").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_learn").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_learn").cast(IntegerType)
        ).cast(IntegerType),
        col("others.is_learn").cast(IntegerType)
      ).as("is_learn"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_remarketing").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_remarketing").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_remarketing").cast(IntegerType)
        ).cast(IntegerType),
        col("others.is_remarketing").cast(IntegerType)
      ).as("is_remarketing"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.advertiser_frequency").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.advertiser_frequency").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.advertiser_frequency").cast(IntegerType)
        ).cast(IntegerType),
        col("others.advertiser_frequency").cast(IntegerType)
      ).as("advertiser_frequency"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.advertiser_recency").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.advertiser_recency").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.advertiser_recency").cast(IntegerType)
        ).cast(IntegerType),
        col("others.advertiser_recency").cast(IntegerType)
      ).as("advertiser_recency"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.user_group_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.user_group_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.user_group_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.user_group_id").cast(IntegerType)
      ).as("user_group_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.camp_dp_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.camp_dp_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.camp_dp_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.camp_dp_id").cast(IntegerType)
      ).as("camp_dp_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.media_buy_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.media_buy_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.media_buy_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.media_buy_id").cast(IntegerType)
      ).as("media_buy_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.post_click_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.post_click_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.post_click_conv").cast(IntegerType)
        ).cast(IntegerType),
        col("others.post_click_conv").cast(IntegerType)
      ).as("post_click_conv"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.post_view_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.post_view_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.post_view_conv").cast(IntegerType)
        ).cast(IntegerType),
        col("others.post_view_conv").cast(IntegerType)
      ).as("post_view_conv"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.post_click_revenue")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.post_click_revenue")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.post_click_revenue")
        ).cast(DoubleType),
        col("others.post_click_revenue").cast(DoubleType)
      ).as("post_click_revenue"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.post_view_revenue")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.post_view_revenue")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.post_view_revenue")
        ).cast(DoubleType),
        col("others.post_view_revenue").cast(DoubleType)
      ).as("post_view_revenue"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.brand_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.brand_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.brand_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.brand_id").cast(IntegerType)
      ).as("brand_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_appnexus_cleared").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_appnexus_cleared").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_appnexus_cleared").cast(IntegerType)
        ).cast(IntegerType),
        col("others.is_appnexus_cleared").cast(IntegerType)
      ).as("is_appnexus_cleared"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.clear_fees")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.clear_fees")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.clear_fees")
        ).cast(DoubleType),
        col("others.clear_fees").cast(DoubleType)
      ).as("clear_fees"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.media_buy_rev_share_pct")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.media_buy_rev_share_pct")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.media_buy_rev_share_pct")
        ).cast(DoubleType),
        col("others.media_buy_rev_share_pct").cast(DoubleType)
      ).as("media_buy_rev_share_pct"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.revenue_value")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.revenue_value")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.revenue_value")
        ).cast(DoubleType),
        col("others.revenue_value").cast(DoubleType)
      ).as("revenue_value"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.pricing_type")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.pricing_type")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.pricing_type")
        ),
        col("others.pricing_type")
      ).as("pricing_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.imp_time")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.imp_time")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.imp_time")
        ),
        col("others.imp_time")
      ).as("imp_time"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.pixel_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.pixel_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.pixel_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.pixel_id").cast(IntegerType)
      ).as("pixel_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.booked_revenue")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.booked_revenue")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.booked_revenue")
        ).cast(DoubleType),
        col("others.booked_revenue").cast(DoubleType)
      ).as("booked_revenue"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.site_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.site_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.site_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.site_id").cast(IntegerType)
      ).as("site_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.content_category_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.content_category_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.content_category_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.content_category_id").cast(IntegerType)
      ).as("content_category_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.fold_position").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.fold_position").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.fold_position").cast(IntegerType)
        ).cast(IntegerType),
        col("others.fold_position").cast(IntegerType)
      ).as("fold_position"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.external_inv_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.external_inv_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.external_inv_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.external_inv_id").cast(IntegerType)
      ).as("external_inv_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.cadence_modifier")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.cadence_modifier")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.cadence_modifier")
        ).cast(DoubleType),
        col("others.cadence_modifier").cast(DoubleType)
      ).as("cadence_modifier"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.predict_goal")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.predict_goal")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.predict_goal")
        ).cast(DoubleType),
        col("others.predict_goal").cast(DoubleType)
      ).as("predict_goal"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.imp_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.imp_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.imp_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.imp_type").cast(IntegerType)
      ).as("imp_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.advertiser_currency")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.advertiser_currency")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.advertiser_currency")
        ),
        col("others.advertiser_currency")
      ).as("advertiser_currency"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.advertiser_exchange_rate")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.advertiser_exchange_rate")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.advertiser_exchange_rate")
        ).cast(DoubleType),
        col("others.advertiser_exchange_rate").cast(DoubleType)
      ).as("advertiser_exchange_rate"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.ip_address")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.ip_address")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.ip_address")
        ),
        col("others.ip_address")
      ).as("ip_address"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.order_id")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.order_id")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.order_id")
        ),
        col("others.order_id")
      ).as("order_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.external_data")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.external_data")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.external_data")
        ),
        col("others.external_data")
      ).as("external_data"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.pub_rule_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.pub_rule_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.pub_rule_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.pub_rule_id").cast(IntegerType)
      ).as("pub_rule_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.publisher_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.publisher_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.publisher_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.publisher_id").cast(IntegerType)
      ).as("publisher_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.insertion_order_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.insertion_order_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.insertion_order_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.insertion_order_id").cast(IntegerType)
      ).as("insertion_order_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.predict_type_rev").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.predict_type_rev").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.predict_type_rev").cast(IntegerType)
        ).cast(IntegerType),
        col("others.predict_type_rev").cast(IntegerType)
      ).as("predict_type_rev"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.predict_type_goal").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.predict_type_goal").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.predict_type_goal").cast(IntegerType)
        ).cast(IntegerType),
        col("others.predict_type_goal").cast(IntegerType)
      ).as("predict_type_goal"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.predict_type_cost").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.predict_type_cost").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.predict_type_cost").cast(IntegerType)
        ).cast(IntegerType),
        col("others.predict_type_cost").cast(IntegerType)
      ).as("predict_type_cost"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.booked_revenue_dollars")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.booked_revenue_dollars")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.booked_revenue_dollars")
        ).cast(DoubleType),
        col("others.booked_revenue_dollars").cast(DoubleType)
      ).as("booked_revenue_dollars"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.booked_revenue_adv_curr")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.booked_revenue_adv_curr")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.booked_revenue_adv_curr")
        ).cast(DoubleType),
        col("others.booked_revenue_adv_curr").cast(DoubleType)
      ).as("booked_revenue_adv_curr"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.commission_revshare")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.commission_revshare")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.commission_revshare")
        ).cast(DoubleType),
        col("others.commission_revshare").cast(DoubleType)
      ).as("commission_revshare"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.serving_fees_revshare")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.serving_fees_revshare")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.serving_fees_revshare")
        ).cast(DoubleType),
        col("others.serving_fees_revshare").cast(DoubleType)
      ).as("serving_fees_revshare"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_control").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_control").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_control").cast(IntegerType)
        ).cast(IntegerType),
        col("others.is_control").cast(IntegerType)
      ).as("is_control"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.user_tz_offset").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.user_tz_offset").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.user_tz_offset").cast(IntegerType)
        ).cast(IntegerType),
        col("others.user_tz_offset").cast(IntegerType)
      ).as("user_tz_offset"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.media_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.media_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.media_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.media_type").cast(IntegerType)
      ).as("media_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.operating_system").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.operating_system").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.operating_system").cast(IntegerType)
        ).cast(IntegerType),
        col("others.operating_system").cast(IntegerType)
      ).as("operating_system"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.browser").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.browser").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.browser").cast(IntegerType)
        ).cast(IntegerType),
        col("others.browser").cast(IntegerType)
      ).as("browser"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.language").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.language").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.language").cast(IntegerType)
        ).cast(IntegerType),
        col("others.language").cast(IntegerType)
      ).as("language"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.publisher_currency")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.publisher_currency")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.publisher_currency")
        ),
        col("others.publisher_currency")
      ).as("publisher_currency"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.publisher_exchange_rate")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.publisher_exchange_rate")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.publisher_exchange_rate")
        ).cast(DoubleType),
        col("others.publisher_exchange_rate").cast(DoubleType)
      ).as("publisher_exchange_rate"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.media_cost_dollars_cpm")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.media_cost_dollars_cpm")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.media_cost_dollars_cpm")
        ).cast(DoubleType),
        col("others.media_cost_dollars_cpm").cast(DoubleType)
      ).as("media_cost_dollars_cpm"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.site_domain")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.site_domain")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.site_domain")
        ),
        col("others.site_domain")
      ).as("site_domain"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.payment_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.payment_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.payment_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.payment_type").cast(IntegerType)
      ).as("payment_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.revenue_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.revenue_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.revenue_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.revenue_type").cast(IntegerType)
      ).as("revenue_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.datacenter_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.datacenter_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.datacenter_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.datacenter_id").cast(IntegerType)
      ).as("datacenter_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.vp_expose_domains").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.vp_expose_domains").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.vp_expose_domains").cast(IntegerType)
        ).cast(IntegerType),
        col("others.vp_expose_domains").cast(IntegerType)
      ).as("vp_expose_domains"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.vp_expose_categories").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.vp_expose_categories").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.vp_expose_categories").cast(IntegerType)
        ).cast(IntegerType),
        col("others.vp_expose_categories").cast(IntegerType)
      ).as("vp_expose_categories"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.vp_expose_pubs").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.vp_expose_pubs").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.vp_expose_pubs").cast(IntegerType)
        ).cast(IntegerType),
        col("others.vp_expose_pubs").cast(IntegerType)
      ).as("vp_expose_pubs"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.vp_expose_tag").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.vp_expose_tag").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.vp_expose_tag").cast(IntegerType)
        ).cast(IntegerType),
        col("others.vp_expose_tag").cast(IntegerType)
      ).as("vp_expose_tag"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.vp_expose_age").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.vp_expose_age").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.vp_expose_age").cast(IntegerType)
        ).cast(IntegerType),
        col("others.vp_expose_age").cast(IntegerType)
      ).as("vp_expose_age"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.vp_expose_gender").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.vp_expose_gender").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.vp_expose_gender").cast(IntegerType)
        ).cast(IntegerType),
        col("others.vp_expose_gender").cast(IntegerType)
      ).as("vp_expose_gender"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.inventory_url_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.inventory_url_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.inventory_url_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.inventory_url_id").cast(IntegerType)
      ).as("inventory_url_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_exclusive").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_exclusive").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_exclusive").cast(IntegerType)
        ).cast(IntegerType),
        col("others.is_exclusive").cast(IntegerType)
      ).as("is_exclusive"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.truncate_ip").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.truncate_ip").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.truncate_ip").cast(IntegerType)
        ).cast(IntegerType),
        col("others.truncate_ip").cast(IntegerType)
      ).as("truncate_ip"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.device_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.device_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.device_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.device_id").cast(IntegerType)
      ).as("device_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.carrier_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.carrier_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.carrier_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.carrier_id").cast(IntegerType)
      ).as("carrier_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.creative_audit_status").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.creative_audit_status").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.creative_audit_status").cast(IntegerType)
        ).cast(IntegerType),
        col("others.creative_audit_status").cast(IntegerType)
      ).as("creative_audit_status"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_creative_hosted").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_creative_hosted").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_creative_hosted").cast(IntegerType)
        ).cast(IntegerType),
        col("others.is_creative_hosted").cast(IntegerType)
      ).as("is_creative_hosted"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.auction_service_deduction")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.auction_service_deduction")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.auction_service_deduction")
        ).cast(DoubleType),
        col("others.auction_service_deduction").cast(DoubleType)
      ).as("auction_service_deduction"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.auction_service_fees")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.auction_service_fees")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.auction_service_fees")
        ).cast(DoubleType),
        col("others.auction_service_fees").cast(DoubleType)
      ).as("auction_service_fees"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_deduction")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_deduction")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_deduction")
        ).cast(DoubleType),
        col("others.seller_deduction").cast(DoubleType)
      ).as("seller_deduction"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.city").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.city").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.city").cast(IntegerType)
        ).cast(IntegerType),
        col("others.city").cast(IntegerType)
      ).as("city"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.latitude")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.latitude")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.latitude")
        ),
        col("others.latitude")
      ).as("latitude"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.longitude")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.longitude")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.longitude")
        ),
        col("others.longitude")
      ).as("longitude"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.device_unique_id")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.device_unique_id")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.device_unique_id")
        ),
        col("others.device_unique_id")
      ).as("device_unique_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.targeted_segments")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.targeted_segments")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.targeted_segments")
        ),
        col("others.targeted_segments")
      ).as("targeted_segments"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.supply_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.supply_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.supply_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.supply_type").cast(IntegerType)
      ).as("supply_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_toolbar").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_toolbar").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_toolbar").cast(IntegerType)
        ).cast(IntegerType),
        col("others.is_toolbar").cast(IntegerType)
      ).as("is_toolbar"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.deal_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.deal_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.deal_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.deal_id").cast(IntegerType)
      ).as("deal_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.vp_bitmap").cast(LongType)
        ).cast(LongType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.vp_bitmap").cast(LongType)
        ).cast(LongType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.vp_bitmap").cast(LongType)
        ).cast(LongType),
        col("others.vp_bitmap").cast(LongType)
      ).as("vp_bitmap"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.application_id")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.application_id")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.application_id")
        ),
        col("others.application_id")
      ).as("application_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.ozone_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.ozone_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.ozone_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.ozone_id").cast(IntegerType)
      ).as("ozone_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_performance").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_performance").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_performance").cast(IntegerType)
        ).cast(IntegerType),
        col("others.is_performance").cast(IntegerType)
      ).as("is_performance"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.sdk_version")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.sdk_version")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.sdk_version")
        ),
        col("others.sdk_version")
      ).as("sdk_version"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.device_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.device_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.device_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.device_type").cast(IntegerType)
      ).as("device_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.dma").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.dma").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.dma").cast(IntegerType)
        ).cast(IntegerType),
        col("others.dma").cast(IntegerType)
      ).as("dma"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.postal")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.postal")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.postal")
        ),
        col("others.postal")
      ).as("postal"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.package_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.package_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.package_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.package_id").cast(IntegerType)
      ).as("package_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.campaign_group_freq").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.campaign_group_freq").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.campaign_group_freq").cast(IntegerType)
        ).cast(IntegerType),
        col("others.campaign_group_freq").cast(IntegerType)
      ).as("campaign_group_freq"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.campaign_group_rec").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.campaign_group_rec").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.campaign_group_rec").cast(IntegerType)
        ).cast(IntegerType),
        col("others.campaign_group_rec").cast(IntegerType)
      ).as("campaign_group_rec"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.insertion_order_freq").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.insertion_order_freq").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.insertion_order_freq").cast(IntegerType)
        ).cast(IntegerType),
        col("others.insertion_order_freq").cast(IntegerType)
      ).as("insertion_order_freq"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.insertion_order_rec").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.insertion_order_rec").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.insertion_order_rec").cast(IntegerType)
        ).cast(IntegerType),
        col("others.insertion_order_rec").cast(IntegerType)
      ).as("insertion_order_rec"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_gender")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_gender")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_gender")
        ),
        col("others.buyer_gender")
      ).as("buyer_gender"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_age").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_age").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_age").cast(IntegerType)
        ).cast(IntegerType),
        col("others.buyer_age").cast(IntegerType)
      ).as("buyer_age"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.targeted_segment_list")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.targeted_segment_list")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.targeted_segment_list")
        ),
        col("others.targeted_segment_list")
      ).as("targeted_segment_list"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.custom_model_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.custom_model_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.custom_model_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.custom_model_id").cast(IntegerType)
      ).as("custom_model_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.custom_model_last_modified").cast(LongType)
        ).cast(LongType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.custom_model_last_modified").cast(LongType)
        ).cast(LongType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.custom_model_last_modified").cast(LongType)
        ).cast(LongType),
        col("others.custom_model_last_modified").cast(LongType)
      ).as("custom_model_last_modified"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.custom_model_output_code")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.custom_model_output_code")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.custom_model_output_code")
        ),
        col("others.custom_model_output_code")
      ).as("custom_model_output_code"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.external_uid")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.external_uid")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.external_uid")
        ),
        col("others.external_uid")
      ).as("external_uid"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.request_uuid")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.request_uuid")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.request_uuid")
        ),
        col("others.request_uuid")
      ).as("request_uuid"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.mobile_app_instance_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.mobile_app_instance_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.mobile_app_instance_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.mobile_app_instance_id").cast(IntegerType)
      ).as("mobile_app_instance_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.traffic_source_code")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.traffic_source_code")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.traffic_source_code")
        ),
        col("others.traffic_source_code")
      ).as("traffic_source_code"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.external_request_id")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.external_request_id")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.external_request_id")
        ),
        col("others.external_request_id")
      ).as("external_request_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.stitch_group_id")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.stitch_group_id")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.stitch_group_id")
        ),
        col("others.stitch_group_id")
      ).as("stitch_group_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.deal_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.deal_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.deal_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.deal_type").cast(IntegerType)
      ).as("deal_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.ym_floor_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.ym_floor_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.ym_floor_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.ym_floor_id").cast(IntegerType)
      ).as("ym_floor_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.ym_bias_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.ym_bias_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.ym_bias_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.ym_bias_id").cast(IntegerType)
      ).as("ym_bias_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.bid_priority").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.bid_priority").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.bid_priority").cast(IntegerType)
        ).cast(IntegerType),
        col("others.bid_priority").cast(IntegerType)
      ).as("bid_priority"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.viewdef_definition_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.viewdef_definition_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.viewdef_definition_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.viewdef_definition_id").cast(IntegerType)
      ).as("viewdef_definition_id"),
      buyer_charges(context).as("buyer_charges"),
      seller_charges(context).as("seller_charges"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.view_result").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.view_result").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.view_result").cast(IntegerType)
        ).cast(IntegerType),
        col("others.view_result").cast(IntegerType)
      ).as("view_result"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.view_non_measurable_reason").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.view_non_measurable_reason").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.view_non_measurable_reason").cast(IntegerType)
        ).cast(IntegerType),
        col("others.view_non_measurable_reason").cast(IntegerType)
      ).as("view_non_measurable_reason"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.view_detection_enabled").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.view_detection_enabled").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.view_detection_enabled").cast(IntegerType)
        ).cast(IntegerType),
        col("others.view_detection_enabled").cast(IntegerType)
      ).as("view_detection_enabled"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.data_costs")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.data_costs")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.data_costs")
        ),
        col("others.data_costs")
      ).as("data_costs"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.device_make_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.device_make_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.device_make_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.device_make_id").cast(IntegerType)
      ).as("device_make_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.operating_system_family_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.operating_system_family_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.operating_system_family_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.operating_system_family_id").cast(IntegerType)
      ).as("operating_system_family_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.bidder_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.bidder_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.bidder_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.bidder_id").cast(IntegerType)
      ).as("bidder_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.pricing_media_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.pricing_media_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.pricing_media_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.pricing_media_type").cast(IntegerType)
      ).as("pricing_media_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_trx_event_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_trx_event_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_trx_event_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.buyer_trx_event_id").cast(IntegerType)
      ).as("buyer_trx_event_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_trx_event_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_trx_event_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_trx_event_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.seller_trx_event_id").cast(IntegerType)
      ).as("seller_trx_event_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_unit_of_trx")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_unit_of_trx")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_unit_of_trx")
        ),
        col("others.is_unit_of_trx")
      ).as("is_unit_of_trx"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.revenue_auction_event_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.revenue_auction_event_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.revenue_auction_event_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.revenue_auction_event_type").cast(IntegerType)
      ).as("revenue_auction_event_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_prebid")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_prebid")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_prebid")
        ),
        col("others.is_prebid")
      ).as("is_prebid"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.attribution_context").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.attribution_context").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.attribution_context").cast(IntegerType)
        ).cast(IntegerType),
        col("others.attribution_context").cast(IntegerType)
      ).as("attribution_context"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.two_phase_reduction_applied")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.two_phase_reduction_applied")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.two_phase_reduction_applied")
        ),
        col("others.two_phase_reduction_applied")
      ).as("two_phase_reduction_applied"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.region_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.region_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.region_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.region_id").cast(IntegerType)
      ).as("region_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.media_company_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.media_company_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.media_company_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.media_company_id").cast(IntegerType)
      ).as("media_company_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.trade_agreement_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.trade_agreement_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.trade_agreement_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.trade_agreement_id").cast(IntegerType)
      ).as("trade_agreement_id"),
      personal_data(context).as("personal_data"),
      struct(
        coalesce(
          when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
               col("resold.anonymized_user_info.user_id")
          ),
          when(col("rtb").isNull.and(is_not_null(col("resold"))),
               col("resold.anonymized_user_info.user_id")
          ),
          when(is_not_null(col("rtb")).and(col("resold").isNull),
               col("rtb.anonymized_user_info.user_id")
          ),
          col("others.anonymized_user_info.user_id")
        ).as("user_id")
      ).as("anonymized_user_info"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.auction_timestamp").cast(LongType)
        ).cast(LongType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.auction_timestamp").cast(LongType)
        ).cast(LongType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.auction_timestamp").cast(LongType)
        ).cast(LongType),
        col("others.auction_timestamp").cast(LongType)
      ).as("auction_timestamp"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.fx_rate_snapshot_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.fx_rate_snapshot_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.fx_rate_snapshot_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.fx_rate_snapshot_id").cast(IntegerType)
      ).as("fx_rate_snapshot_id"),
      struct(
        coalesce(
          when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
               col("resold.crossdevice_group_anon.graph_id").cast(IntegerType)
          ).cast(IntegerType),
          when(col("rtb").isNull.and(is_not_null(col("resold"))),
               col("resold.crossdevice_group_anon.graph_id").cast(IntegerType)
          ).cast(IntegerType),
          when(is_not_null(col("rtb")).and(col("resold").isNull),
               col("rtb.crossdevice_group_anon.graph_id").cast(IntegerType)
          ).cast(IntegerType),
          col("others.crossdevice_group_anon.graph_id").cast(IntegerType)
        ).as("graph_id"),
        coalesce(
          when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
               col("resold.crossdevice_group_anon.group_id")
          ),
          when(col("rtb").isNull.and(is_not_null(col("resold"))),
               col("resold.crossdevice_group_anon.group_id")
          ),
          when(is_not_null(col("rtb")).and(col("resold").isNull),
               col("rtb.crossdevice_group_anon.group_id")
          ),
          col("others.crossdevice_group_anon.group_id")
        ).as("group_id")
      ).as("crossdevice_group_anon"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.post_click_crossdevice_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.post_click_crossdevice_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.post_click_crossdevice_conv").cast(IntegerType)
        ).cast(IntegerType),
        col("others.post_click_crossdevice_conv").cast(IntegerType)
      ).as("post_click_crossdevice_conv"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.post_view_crossdevice_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.post_view_crossdevice_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.post_view_crossdevice_conv").cast(IntegerType)
        ).cast(IntegerType),
        col("others.post_view_crossdevice_conv").cast(IntegerType)
      ).as("post_view_crossdevice_conv"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.revenue_event_type_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.revenue_event_type_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.revenue_event_type_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.revenue_event_type_id").cast(IntegerType)
      ).as("revenue_event_type_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.post_click_crossdevice_revenue")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.post_click_crossdevice_revenue")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.post_click_crossdevice_revenue")
        ).cast(DoubleType),
        col("others.post_click_crossdevice_revenue").cast(DoubleType)
      ).as("post_click_crossdevice_revenue"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.post_view_crossdevice_revenue")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.post_view_crossdevice_revenue")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.post_view_crossdevice_revenue")
        ).cast(DoubleType),
        col("others.post_view_crossdevice_revenue").cast(DoubleType)
      ).as("post_view_crossdevice_revenue"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.external_creative_id")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.external_creative_id")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.external_creative_id")
        ),
        col("others.external_creative_id")
      ).as("external_creative_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.targeted_segment_details")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.targeted_segment_details")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.targeted_segment_details")
        ),
        col("others.targeted_segment_details")
      ).as("targeted_segment_details"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.bidder_seat_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.bidder_seat_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.bidder_seat_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.bidder_seat_id").cast(IntegerType)
      ).as("bidder_seat_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.universal_pixel_rule_version_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.universal_pixel_rule_version_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.universal_pixel_rule_version_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.universal_pixel_rule_version_id").cast(IntegerType)
      ).as("universal_pixel_rule_version_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_curated")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_curated")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_curated")
        ),
        col("others.is_curated")
      ).as("is_curated"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.curator_member_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.curator_member_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.curator_member_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.curator_member_id").cast(IntegerType)
      ).as("curator_member_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.cold_start_price_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.cold_start_price_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.cold_start_price_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.cold_start_price_type").cast(IntegerType)
      ).as("cold_start_price_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.discovery_state").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.discovery_state").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.discovery_state").cast(IntegerType)
        ).cast(IntegerType),
        col("others.discovery_state").cast(IntegerType)
      ).as("discovery_state"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.billing_period_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.billing_period_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.billing_period_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.billing_period_id").cast(IntegerType)
      ).as("billing_period_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.flight_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.flight_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.flight_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.flight_id").cast(IntegerType)
      ).as("flight_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.split_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.split_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.split_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.split_id").cast(IntegerType)
      ).as("split_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.conversion_device_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.conversion_device_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.conversion_device_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.conversion_device_type").cast(IntegerType)
      ).as("conversion_device_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.conversion_device_make_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.conversion_device_make_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.conversion_device_make_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.conversion_device_make_id").cast(IntegerType)
      ).as("conversion_device_make_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.universal_pixel_fire_id")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.universal_pixel_fire_id")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.universal_pixel_fire_id")
        ),
        col("others.universal_pixel_fire_id")
      ).as("universal_pixel_fire_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.discovery_prediction")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.discovery_prediction")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.discovery_prediction")
        ).cast(DoubleType),
        col("others.discovery_prediction").cast(DoubleType)
      ).as("discovery_prediction"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.campaign_group_type_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.campaign_group_type_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.campaign_group_type_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.campaign_group_type_id").cast(IntegerType)
      ).as("campaign_group_type_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.excluded_targeted_segment_details")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.excluded_targeted_segment_details")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.excluded_targeted_segment_details")
        ),
        col("others.excluded_targeted_segment_details")
      ).as("excluded_targeted_segment_details"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.trust_id")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.trust_id")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.trust_id")
        ),
        col("others.trust_id")
      ).as("trust_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.predicted_kpi_event_rate")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.predicted_kpi_event_rate")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.predicted_kpi_event_rate")
        ).cast(DoubleType),
        col("others.predicted_kpi_event_rate").cast(DoubleType)
      ).as("predicted_kpi_event_rate"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.has_crossdevice_reach_extension")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.has_crossdevice_reach_extension")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.has_crossdevice_reach_extension")
        ),
        col("others.has_crossdevice_reach_extension")
      ).as("has_crossdevice_reach_extension"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.counterparty_ruleset_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.counterparty_ruleset_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.counterparty_ruleset_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.counterparty_ruleset_type").cast(IntegerType)
      ).as("counterparty_ruleset_type"),
      log_product_ads(context).as("log_product_ads"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.hb_source").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.hb_source").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.hb_source").cast(IntegerType)
        ).cast(IntegerType),
        col("others.hb_source").cast(IntegerType)
      ).as("hb_source"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_identifiers_experimental")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_identifiers_experimental")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_identifiers_experimental")
        ),
        col("others.personal_identifiers_experimental")
      ).as("personal_identifiers_experimental"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.postal_code_ext_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.postal_code_ext_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.postal_code_ext_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.postal_code_ext_id").cast(IntegerType)
      ).as("postal_code_ext_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.targeted_segment_details_by_id_type")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.targeted_segment_details_by_id_type")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.targeted_segment_details_by_id_type")
        ),
        col("others.targeted_segment_details_by_id_type")
      ).as("targeted_segment_details_by_id_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_identifiers")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_identifiers")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_identifiers")
        ),
        col("others.personal_identifiers")
      ).as("personal_identifiers"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.post_click_ip_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.post_click_ip_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.post_click_ip_conv").cast(IntegerType)
        ).cast(IntegerType),
        col("others.post_click_ip_conv").cast(IntegerType)
      ).as("post_click_ip_conv"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.post_view_ip_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.post_view_ip_conv").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.post_view_ip_conv").cast(IntegerType)
        ).cast(IntegerType),
        col("others.post_view_ip_conv").cast(IntegerType)
      ).as("post_view_ip_conv"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.hashed_ip")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.hashed_ip")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.hashed_ip")
        ),
        col("others.hashed_ip")
      ).as("hashed_ip"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.district_postal_code_lists")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.district_postal_code_lists")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.district_postal_code_lists")
        ),
        col("others.district_postal_code_lists")
      ).as("district_postal_code_lists"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_dpvp_bitmap").cast(LongType)
        ).cast(LongType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_dpvp_bitmap").cast(LongType)
        ).cast(LongType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_dpvp_bitmap").cast(LongType)
        ).cast(LongType),
        col("others.buyer_dpvp_bitmap").cast(LongType)
      ).as("buyer_dpvp_bitmap"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_dpvp_bitmap").cast(LongType)
        ).cast(LongType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_dpvp_bitmap").cast(LongType)
        ).cast(LongType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_dpvp_bitmap").cast(LongType)
        ).cast(LongType),
        col("others.seller_dpvp_bitmap").cast(LongType)
      ).as("seller_dpvp_bitmap"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.private_auction_eligible")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.private_auction_eligible")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.private_auction_eligible")
        ),
        col("others.private_auction_eligible")
      ).as("private_auction_eligible"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.chrome_traffic_label").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.chrome_traffic_label").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.chrome_traffic_label").cast(IntegerType)
        ).cast(IntegerType),
        col("others.chrome_traffic_label").cast(IntegerType)
      ).as("chrome_traffic_label"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.is_private_auction")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.is_private_auction")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.is_private_auction")
        ),
        col("others.is_private_auction")
      ).as("is_private_auction")
    )

  def log_product_ads(context: Context) = {
    val spark  = context.spark
    val Config = context.config
    struct(
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.log_product_ads.product_feed_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.log_product_ads.product_feed_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.log_product_ads.product_feed_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.log_product_ads.product_feed_id").cast(IntegerType)
      ).as("product_feed_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.log_product_ads.item_selection_strategy_id").cast(
               IntegerType
             )
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.log_product_ads.item_selection_strategy_id").cast(
               IntegerType
             )
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.log_product_ads.item_selection_strategy_id").cast(
               IntegerType
             )
        ).cast(IntegerType),
        col("others.log_product_ads.item_selection_strategy_id").cast(
          IntegerType
        )
      ).as("item_selection_strategy_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.log_product_ads.product_uuid")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.log_product_ads.product_uuid")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.log_product_ads.product_uuid")
        ),
        col("others.log_product_ads.product_uuid")
      ).as("product_uuid")
    )
  }

  def buyer_charges(context: Context) = {
    val spark  = context.spark
    val Config = context.config
    struct(
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_charges.rate_card_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_charges.rate_card_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_charges.rate_card_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.buyer_charges.rate_card_id").cast(IntegerType)
      ).as("rate_card_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_charges.member_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_charges.member_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_charges.member_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.buyer_charges.member_id").cast(IntegerType)
      ).as("member_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_charges.is_dw")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_charges.is_dw")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_charges.is_dw")
        ),
        col("others.buyer_charges.is_dw")
      ).as("is_dw"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_charges.pricing_terms")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_charges.pricing_terms")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_charges.pricing_terms")
        ),
        col("others.buyer_charges.pricing_terms")
      ).as("pricing_terms"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_charges.fx_margin_rate_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_charges.fx_margin_rate_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_charges.fx_margin_rate_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.buyer_charges.fx_margin_rate_id").cast(IntegerType)
      ).as("fx_margin_rate_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_charges.marketplace_owner_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_charges.marketplace_owner_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_charges.marketplace_owner_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.buyer_charges.marketplace_owner_id").cast(IntegerType)
      ).as("marketplace_owner_id"),
      coalesce(
        when(
          is_not_null(col("rtb")).and(is_not_null(col("resold"))),
          col("resold.buyer_charges.virtual_marketplace_id").cast(IntegerType)
        ).cast(IntegerType),
        when(
          col("rtb").isNull.and(is_not_null(col("resold"))),
          col("resold.buyer_charges.virtual_marketplace_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_charges.virtual_marketplace_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.buyer_charges.virtual_marketplace_id").cast(IntegerType)
      ).as("virtual_marketplace_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.buyer_charges.amino_enabled")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.buyer_charges.amino_enabled")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.buyer_charges.amino_enabled")
        ),
        col("others.buyer_charges.amino_enabled")
      ).as("amino_enabled")
    )
  }

  def personal_data(context: Context) = {
    val spark  = context.spark
    val Config = context.config
    struct(
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.user_id_64").cast(LongType)
        ).cast(LongType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.user_id_64").cast(LongType)
        ).cast(LongType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.user_id_64").cast(LongType)
        ).cast(LongType),
        col("others.personal_data.user_id_64").cast(LongType)
      ).as("user_id_64"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.device_unique_id")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.device_unique_id")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.device_unique_id")
        ),
        col("others.personal_data.device_unique_id")
      ).as("device_unique_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.external_uid")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.external_uid")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.external_uid")
        ),
        col("others.personal_data.external_uid")
      ).as("external_uid"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.ip_address")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.ip_address")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.ip_address")
        ),
        col("others.personal_data.ip_address")
      ).as("ip_address"),
      struct(
        coalesce(
          when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
               col("resold.personal_data.crossdevice_group.graph_id").cast(
                 IntegerType
               )
          ).cast(IntegerType),
          when(col("rtb").isNull.and(is_not_null(col("resold"))),
               col("resold.personal_data.crossdevice_group.graph_id").cast(
                 IntegerType
               )
          ).cast(IntegerType),
          when(is_not_null(col("rtb")).and(col("resold").isNull),
               col("rtb.personal_data.crossdevice_group.graph_id").cast(
                 IntegerType
               )
          ).cast(IntegerType),
          col("others.personal_data.crossdevice_group.graph_id").cast(
            IntegerType
          )
        ).as("graph_id"),
        coalesce(
          when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
               col("resold.personal_data.crossdevice_group.group_id").cast(
                 LongType
               )
          ).cast(LongType),
          when(col("rtb").isNull.and(is_not_null(col("resold"))),
               col("resold.personal_data.crossdevice_group.group_id").cast(
                 LongType
               )
          ).cast(LongType),
          when(
            is_not_null(col("rtb")).and(col("resold").isNull),
            col("rtb.personal_data.crossdevice_group.group_id").cast(LongType)
          ).cast(LongType),
          col("others.personal_data.crossdevice_group.group_id").cast(LongType)
        ).as("group_id")
      ).as("crossdevice_group"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.latitude")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.latitude")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.latitude")
        ).cast(DoubleType),
        col("others.personal_data.latitude").cast(DoubleType)
      ).as("latitude"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.longitude")
        ).cast(DoubleType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.longitude")
        ).cast(DoubleType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.longitude")
        ).cast(DoubleType),
        col("others.personal_data.longitude").cast(DoubleType)
      ).as("longitude"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.ipv6_address")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.ipv6_address")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.ipv6_address")
        ),
        col("others.personal_data.ipv6_address")
      ).as("ipv6_address"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.subject_to_gdpr")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.subject_to_gdpr")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.subject_to_gdpr")
        ),
        col("others.personal_data.subject_to_gdpr")
      ).as("subject_to_gdpr"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.geo_country")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.geo_country")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.geo_country")
        ),
        col("others.personal_data.geo_country")
      ).as("geo_country"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.gdpr_consent_string")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.gdpr_consent_string")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.gdpr_consent_string")
        ),
        col("others.personal_data.gdpr_consent_string")
      ).as("gdpr_consent_string"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.preempt_ip_address")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.preempt_ip_address")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.preempt_ip_address")
        ),
        col("others.personal_data.preempt_ip_address")
      ).as("preempt_ip_address"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.device_type").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.device_type").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.device_type").cast(IntegerType)
        ).cast(IntegerType),
        col("others.personal_data.device_type").cast(IntegerType)
      ).as("device_type"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.device_make_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.device_make_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.device_make_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.personal_data.device_make_id").cast(IntegerType)
      ).as("device_make_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.device_model_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.device_model_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.device_model_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.personal_data.device_model_id").cast(IntegerType)
      ).as("device_model_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.new_user_id_64").cast(LongType)
        ).cast(LongType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.new_user_id_64").cast(LongType)
        ).cast(LongType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.new_user_id_64").cast(LongType)
        ).cast(LongType),
        col("others.personal_data.new_user_id_64").cast(LongType)
      ).as("new_user_id_64"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.is_service_provider_mode")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.is_service_provider_mode")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.is_service_provider_mode")
        ),
        col("others.personal_data.is_service_provider_mode")
      ).as("is_service_provider_mode"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.personal_data.is_personal_info_sale")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.personal_data.is_personal_info_sale")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.personal_data.is_personal_info_sale")
        ),
        col("others.personal_data.is_personal_info_sale")
      ).as("is_personal_info_sale")
    )
  }

  def seller_charges(context: Context) = {
    val spark  = context.spark
    val Config = context.config
    struct(
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_charges.rate_card_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_charges.rate_card_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_charges.rate_card_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.seller_charges.rate_card_id").cast(IntegerType)
      ).as("rate_card_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_charges.member_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_charges.member_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_charges.member_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.seller_charges.member_id").cast(IntegerType)
      ).as("member_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_charges.is_dw")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_charges.is_dw")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_charges.is_dw")
        ),
        col("others.seller_charges.is_dw")
      ).as("is_dw"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_charges.pricing_terms")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_charges.pricing_terms")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_charges.pricing_terms")
        ),
        col("others.seller_charges.pricing_terms")
      ).as("pricing_terms"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_charges.fx_margin_rate_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_charges.fx_margin_rate_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_charges.fx_margin_rate_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.seller_charges.fx_margin_rate_id").cast(IntegerType)
      ).as("fx_margin_rate_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_charges.marketplace_owner_id").cast(IntegerType)
        ).cast(IntegerType),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_charges.marketplace_owner_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_charges.marketplace_owner_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.seller_charges.marketplace_owner_id").cast(IntegerType)
      ).as("marketplace_owner_id"),
      coalesce(
        when(
          is_not_null(col("rtb")).and(is_not_null(col("resold"))),
          col("resold.seller_charges.virtual_marketplace_id").cast(IntegerType)
        ).cast(IntegerType),
        when(
          col("rtb").isNull.and(is_not_null(col("resold"))),
          col("resold.seller_charges.virtual_marketplace_id").cast(IntegerType)
        ).cast(IntegerType),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_charges.virtual_marketplace_id").cast(IntegerType)
        ).cast(IntegerType),
        col("others.seller_charges.virtual_marketplace_id").cast(IntegerType)
      ).as("virtual_marketplace_id"),
      coalesce(
        when(is_not_null(col("rtb")).and(is_not_null(col("resold"))),
             col("resold.seller_charges.amino_enabled")
        ),
        when(col("rtb").isNull.and(is_not_null(col("resold"))),
             col("resold.seller_charges.amino_enabled")
        ),
        when(is_not_null(col("rtb")).and(col("resold").isNull),
             col("rtb.seller_charges.amino_enabled")
        ),
        col("others.seller_charges.amino_enabled")
      ).as("amino_enabled")
    )
  }

}
