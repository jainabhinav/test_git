package com.microsoft.ads.data.dnv.agg_platform_video_analytics.graph.Main_Graph.Validate_Pick_impbus_Clicks_imp_type_6

import io.prophecy.libs._
import com.microsoft.ads.data.dnv.agg_platform_video_analytics.udfs.PipelineInitCode._
import com.microsoft.ads.data.dnv.agg_platform_video_analytics.udfs.UDFs._
import com.microsoft.ads.data.dnv.agg_platform_video_analytics.udfs.ColumnFunctions._
import com.microsoft.ads.data.dnv.agg_platform_video_analytics.graph.Main_Graph.Validate_Pick_impbus_Clicks_imp_type_6.config.Context
import org.apache.spark._
import org.apache.spark.sql._
import org.apache.spark.sql.functions._
import org.apache.spark.sql.types._
import org.apache.spark.sql.expressions._
import java.time._

object Reformat_3 {

  def apply(context: Context, in: DataFrame): DataFrame =
    in.select(
      col("resold.date_time").cast(LongType).as("date_time"),
      col("resold.auction_id_64").cast(LongType).as("auction_id_64"),
      col("resold.user_id_64").cast(LongType).as("user_id_64"),
      col("resold.tag_id").cast(IntegerType).as("tag_id"),
      col("resold.venue_id").cast(IntegerType).as("venue_id"),
      col("resold.inventory_source_id")
        .cast(IntegerType)
        .as("inventory_source_id"),
      col("resold.session_frequency").cast(IntegerType).as("session_frequency"),
      col("resold.width").cast(IntegerType).as("width"),
      col("resold.height").cast(IntegerType).as("height"),
      col("resold.geo_country").as("geo_country"),
      col("resold.geo_region").as("geo_region"),
      col("resold.gender").as("gender"),
      col("resold.age").cast(IntegerType).as("age"),
      col("resold.seller_member_id").cast(IntegerType).as("seller_member_id"),
      col("resold.buyer_member_id").cast(IntegerType).as("buyer_member_id"),
      col("resold.creative_id").cast(IntegerType).as("creative_id"),
      col("resold.seller_currency").as("seller_currency"),
      col("resold.buyer_currency").as("buyer_currency"),
      col("resold.advertiser_id").cast(IntegerType).as("advertiser_id"),
      col("resold.campaign_group_id").cast(IntegerType).as("campaign_group_id"),
      col("resold.campaign_id").cast(IntegerType).as("campaign_id"),
      col("resold.creative_freq").cast(IntegerType).as("creative_freq"),
      col("resold.creative_rec").cast(IntegerType).as("creative_rec"),
      col("resold.is_learn").cast(IntegerType).as("is_learn"),
      col("resold.is_remarketing").cast(IntegerType).as("is_remarketing"),
      col("resold.advertiser_frequency")
        .cast(IntegerType)
        .as("advertiser_frequency"),
      col("resold.advertiser_recency")
        .cast(IntegerType)
        .as("advertiser_recency"),
      col("resold.user_group_id").cast(IntegerType).as("user_group_id"),
      col("resold.camp_dp_id").cast(IntegerType).as("camp_dp_id"),
      col("resold.media_buy_id").cast(IntegerType).as("media_buy_id"),
      col("resold.brand_id").cast(IntegerType).as("brand_id"),
      col("resold.is_appnexus_cleared")
        .cast(IntegerType)
        .as("is_appnexus_cleared"),
      col("resold.clear_fees").cast(DoubleType).as("clear_fees"),
      col("resold.media_buy_rev_share_pct")
        .cast(DoubleType)
        .as("media_buy_rev_share_pct"),
      col("resold.revenue_value").cast(DoubleType).as("revenue_value"),
      col("resold.pricing_type").as("pricing_type"),
      col("resold.site_id").cast(IntegerType).as("site_id"),
      col("resold.content_category_id")
        .cast(IntegerType)
        .as("content_category_id"),
      col("resold.fold_position").cast(IntegerType).as("fold_position"),
      col("resold.external_inv_id").cast(IntegerType).as("external_inv_id"),
      col("resold.cadence_modifier").cast(DoubleType).as("cadence_modifier"),
      col("resold.imp_type").cast(IntegerType).as("imp_type"),
      col("resold.advertiser_currency").as("advertiser_currency"),
      col("resold.advertiser_exchange_rate")
        .cast(DoubleType)
        .as("advertiser_exchange_rate"),
      col("resold.ip_address").as("ip_address"),
      col("resold.pub_rule_id").cast(IntegerType).as("pub_rule_id"),
      col("resold.publisher_id").cast(IntegerType).as("publisher_id"),
      col("resold.insertion_order_id")
        .cast(IntegerType)
        .as("insertion_order_id"),
      col("resold.predict_type_rev").cast(IntegerType).as("predict_type_rev"),
      col("resold.predict_type_goal").cast(IntegerType).as("predict_type_goal"),
      col("resold.predict_type_cost").cast(IntegerType).as("predict_type_cost"),
      col("resold.commission_revshare")
        .cast(DoubleType)
        .as("commission_revshare"),
      col("resold.serving_fees_revshare")
        .cast(DoubleType)
        .as("serving_fees_revshare"),
      col("resold.user_tz_offset").cast(IntegerType).as("user_tz_offset"),
      col("resold.media_type").cast(IntegerType).as("media_type"),
      col("resold.operating_system").cast(IntegerType).as("operating_system"),
      col("resold.browser").cast(IntegerType).as("browser"),
      col("resold.language").cast(IntegerType).as("language"),
      col("resold.publisher_currency").as("publisher_currency"),
      col("resold.publisher_exchange_rate")
        .cast(DoubleType)
        .as("publisher_exchange_rate"),
      col("resold.site_domain").as("site_domain"),
      col("resold.payment_type").cast(IntegerType).as("payment_type"),
      col("resold.revenue_type").cast(IntegerType).as("revenue_type"),
      col("resold.bidder_id").cast(IntegerType).as("bidder_id"),
      col("resold.inv_code").as("inv_code"),
      col("resold.application_id").as("application_id"),
      col("resold.is_control").cast(IntegerType).as("is_control"),
      col("resold.vp_expose_domains").cast(IntegerType).as("vp_expose_domains"),
      col("resold.vp_expose_categories")
        .cast(IntegerType)
        .as("vp_expose_categories"),
      col("resold.vp_expose_pubs").cast(IntegerType).as("vp_expose_pubs"),
      col("resold.vp_expose_tag").cast(IntegerType).as("vp_expose_tag"),
      col("resold.vp_expose_age").cast(IntegerType).as("vp_expose_age"),
      col("resold.vp_expose_gender").cast(IntegerType).as("vp_expose_gender"),
      col("resold.inventory_url_id").cast(IntegerType).as("inventory_url_id"),
      col("resold.imp_time").as("imp_time"),
      col("resold.is_exclusive").cast(IntegerType).as("is_exclusive"),
      col("resold.truncate_ip").cast(IntegerType).as("truncate_ip"),
      col("resold.datacenter_id").cast(IntegerType).as("datacenter_id"),
      col("resold.device_id").cast(IntegerType).as("device_id"),
      col("resold.carrier_id").cast(IntegerType).as("carrier_id"),
      col("resold.creative_audit_status")
        .cast(IntegerType)
        .as("creative_audit_status"),
      col("resold.is_creative_hosted")
        .cast(IntegerType)
        .as("is_creative_hosted"),
      col("resold.city").cast(IntegerType).as("city"),
      col("resold.latitude").as("latitude"),
      col("resold.longitude").as("longitude"),
      col("resold.device_unique_id").as("device_unique_id"),
      col("resold.targeted_segments").as("targeted_segments"),
      col("resold.supply_type").cast(IntegerType).as("supply_type"),
      col("resold.is_toolbar").cast(IntegerType).as("is_toolbar"),
      col("resold.control_pct").cast(DoubleType).as("control_pct"),
      col("resold.deal_id").cast(IntegerType).as("deal_id"),
      col("resold.vp_bitmap").cast(LongType).as("vp_bitmap"),
      col("resold.ozone_id").cast(IntegerType).as("ozone_id"),
      col("resold.is_performance").cast(IntegerType).as("is_performance"),
      col("resold.sdk_version").as("sdk_version"),
      col("resold.device_type").cast(IntegerType).as("device_type"),
      col("resold.dma").cast(IntegerType).as("dma"),
      col("resold.postal").as("postal"),
      col("resold.package_id").cast(IntegerType).as("package_id"),
      col("resold.campaign_group_freq")
        .cast(IntegerType)
        .as("campaign_group_freq"),
      col("resold.campaign_group_rec")
        .cast(IntegerType)
        .as("campaign_group_rec"),
      col("resold.insertion_order_freq")
        .cast(IntegerType)
        .as("insertion_order_freq"),
      col("resold.insertion_order_rec")
        .cast(IntegerType)
        .as("insertion_order_rec"),
      col("resold.buyer_gender").as("buyer_gender"),
      col("resold.buyer_age").cast(IntegerType).as("buyer_age"),
      col("resold.targeted_segment_list").as("targeted_segment_list"),
      col("resold.custom_model_id").cast(IntegerType).as("custom_model_id"),
      col("resold.custom_model_last_modified")
        .cast(LongType)
        .as("custom_model_last_modified"),
      col("resold.custom_model_output_code").as("custom_model_output_code"),
      col("resold.external_uid").as("external_uid"),
      col("resold.request_uuid").as("request_uuid"),
      col("resold.mobile_app_instance_id")
        .cast(IntegerType)
        .as("mobile_app_instance_id"),
      col("resold.traffic_source_code").as("traffic_source_code"),
      col("resold.external_request_id").as("external_request_id"),
      col("resold.stitch_group_id").as("stitch_group_id"),
      col("resold.deal_type").cast(IntegerType).as("deal_type"),
      col("resold.ym_floor_id").cast(IntegerType).as("ym_floor_id"),
      col("resold.ym_bias_id").cast(IntegerType).as("ym_bias_id"),
      col("resold.bid_priority").cast(IntegerType).as("bid_priority"),
      col("resold.viewdef_definition_id")
        .cast(IntegerType)
        .as("viewdef_definition_id"),
      col("resold.view_result").cast(IntegerType).as("view_result"),
      col("resold.view_non_measurable_reason")
        .cast(IntegerType)
        .as("view_non_measurable_reason"),
      col("resold.view_detection_enabled")
        .cast(IntegerType)
        .as("view_detection_enabled"),
      col("resold.device_make_id").cast(IntegerType).as("device_make_id"),
      col("resold.operating_system_family_id")
        .cast(IntegerType)
        .as("operating_system_family_id"),
      col("resold.pricing_media_type")
        .cast(IntegerType)
        .as("pricing_media_type"),
      col("resold.buyer_trx_event_id")
        .cast(IntegerType)
        .as("buyer_trx_event_id"),
      col("resold.seller_trx_event_id")
        .cast(IntegerType)
        .as("seller_trx_event_id"),
      col("resold.is_unit_of_trx").as("is_unit_of_trx"),
      col("resold.revenue_auction_event_type")
        .cast(IntegerType)
        .as("revenue_auction_event_type"),
      col("resold.is_prebid").as("is_prebid"),
      col("resold.auction_timestamp").cast(LongType).as("auction_timestamp"),
      col("resold.two_phase_reduction_applied")
        .as("two_phase_reduction_applied"),
      col("resold.region_id").cast(IntegerType).as("region_id"),
      col("resold.media_company_id").cast(IntegerType).as("media_company_id"),
      col("resold.trade_agreement_id")
        .cast(IntegerType)
        .as("trade_agreement_id"),
      struct(
        col("resold.personal_data.user_id_64").cast(LongType).as("user_id_64"),
        col("resold.personal_data.device_unique_id").as("device_unique_id"),
        col("resold.personal_data.external_uid").as("external_uid"),
        col("resold.personal_data.ip_address").as("ip_address"),
        struct(
          col("resold.personal_data.crossdevice_group.graph_id")
            .cast(IntegerType)
            .as("graph_id"),
          col("resold.personal_data.crossdevice_group.group_id")
            .cast(LongType)
            .as("group_id")
        ).as("crossdevice_group"),
        col("resold.personal_data.latitude").cast(DoubleType).as("latitude"),
        col("resold.personal_data.longitude").cast(DoubleType).as("longitude"),
        col("resold.personal_data.ipv6_address").as("ipv6_address"),
        col("resold.personal_data.subject_to_gdpr").as("subject_to_gdpr"),
        col("resold.personal_data.geo_country").as("geo_country"),
        col("resold.personal_data.gdpr_consent_string").as(
          "gdpr_consent_string"
        ),
        col("resold.personal_data.preempt_ip_address").as("preempt_ip_address"),
        col("resold.personal_data.device_type")
          .cast(IntegerType)
          .as("device_type"),
        col("resold.personal_data.device_make_id")
          .cast(IntegerType)
          .as("device_make_id"),
        col("resold.personal_data.device_model_id")
          .cast(IntegerType)
          .as("device_model_id"),
        col("resold.personal_data.new_user_id_64")
          .cast(LongType)
          .as("new_user_id_64"),
        col("resold.personal_data.is_service_provider_mode").as(
          "is_service_provider_mode"
        ),
        col("resold.personal_data.is_personal_info_sale").as(
          "is_personal_info_sale"
        )
      ).as("personal_data"),
      col("resold.anonymized_user_info").as("anonymized_user_info"),
      col("resold.fx_rate_snapshot_id")
        .cast(IntegerType)
        .as("fx_rate_snapshot_id"),
      struct(col("resold.crossdevice_group_anon.graph_id")
               .cast(IntegerType)
               .as("graph_id"),
             col("resold.crossdevice_group_anon.group_id").as("group_id")
      ).as("crossdevice_group_anon"),
      col("resold.revenue_event_type_id")
        .cast(IntegerType)
        .as("revenue_event_type_id"),
      col("resold.external_creative_id").as("external_creative_id"),
      col("resold.targeted_segment_details").as("targeted_segment_details"),
      col("resold.bidder_seat_id").cast(IntegerType).as("bidder_seat_id"),
      col("resold.is_curated").as("is_curated"),
      col("resold.curator_member_id").cast(IntegerType).as("curator_member_id"),
      col("resold.cold_start_price_type")
        .cast(IntegerType)
        .as("cold_start_price_type"),
      col("resold.discovery_state").cast(IntegerType).as("discovery_state"),
      col("resold.billing_period_id").cast(IntegerType).as("billing_period_id"),
      col("resold.flight_id").cast(IntegerType).as("flight_id"),
      col("resold.split_id").cast(IntegerType).as("split_id"),
      col("resold.discovery_prediction")
        .cast(DoubleType)
        .as("discovery_prediction"),
      col("resold.campaign_group_type_id")
        .cast(IntegerType)
        .as("campaign_group_type_id"),
      col("resold.excluded_targeted_segment_details")
        .as("excluded_targeted_segment_details"),
      col("resold.predicted_kpi_event_rate")
        .cast(DoubleType)
        .as("predicted_kpi_event_rate"),
      col("resold.has_crossdevice_reach_extension")
        .as("has_crossdevice_reach_extension"),
      col("resold.counterparty_ruleset_type")
        .cast(IntegerType)
        .as("counterparty_ruleset_type"),
      struct(
        col("resold.log_product_ads.product_feed_id")
          .cast(IntegerType)
          .as("product_feed_id"),
        col("resold.log_product_ads.item_selection_strategy_id")
          .cast(IntegerType)
          .as("item_selection_strategy_id"),
        col("resold.log_product_ads.product_uuid").as("product_uuid")
      ).as("log_product_ads"),
      col("resold.hb_source").cast(IntegerType).as("hb_source"),
      col("resold.buyer_line_item_currency").as("buyer_line_item_currency"),
      col("resold.deal_line_item_currency").as("deal_line_item_currency"),
      col("resold.personal_identifiers_experimental")
        .as("personal_identifiers_experimental"),
      col("resold.postal_code_ext_id")
        .cast(IntegerType)
        .as("postal_code_ext_id"),
      col("resold.targeted_segment_details_by_id_type")
        .as("targeted_segment_details_by_id_type"),
      col("resold.personal_identifiers").as("personal_identifiers"),
      col("resold.buyer_dpvp_bitmap").cast(LongType).as("buyer_dpvp_bitmap"),
      col("resold.seller_dpvp_bitmap").cast(LongType).as("seller_dpvp_bitmap")
    )

}
