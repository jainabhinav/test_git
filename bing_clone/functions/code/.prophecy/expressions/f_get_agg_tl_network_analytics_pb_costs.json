{"parameters":[{"name":"imp_type","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"total_partner_fees_microcents","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"total_data_costs_microcents","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"total_feature_costs_microcents","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"total_segment_data_costs_microcents","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"media_cost_dollars_cpm","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"serving_fees_cpm","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"serving_fees_revshare","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"commission_cpm","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"commission_revshare","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"booked_revenue_dollars","type":"column","metadata":{"description":"","tags":[],"mappings":[]}}],"output":{"type":"struct","fields":[{"name":"total_partner_fees_microcents","type":"double","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"total_data_costs_microcents","type":"double","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"total_cost_microcents","type":"double","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"total_feature_costs_microcents","type":"double","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}},{"name":"total_segment_data_costs_microcents","type":"double","nullable":true,"metadata":{"description":"","mappings":[],"tags":[]}}]},"isCustomSchemaEnabled":true,"code":"var l_total_partner_fees_microcents: org.apache.spark.sql.Column = coalesce(total_partner_fees_microcents, lit(0)).cast(LongType)\nvar l_total_data_costs_microcents: org.apache.spark.sql.Column = coalesce(total_data_costs_microcents, lit(0)).cast(LongType)\nvar l_total_feature_costs_microcents: org.apache.spark.sql.Column = coalesce(total_feature_costs_microcents, lit(0)).cast(LongType)\nvar l_total_segment_data_costs_microcents: org.apache.spark.sql.Column = coalesce(total_segment_data_costs_microcents, lit(0)).cast(LongType)\nvar l_media_cost_dollars_cpm: org.apache.spark.sql.Column = coalesce(media_cost_dollars_cpm, lit(0.0)).cast(DoubleType)\nvar l_serving_fees_cpm: org.apache.spark.sql.Column = coalesce(serving_fees_cpm, lit(0.0)).cast(DoubleType)\nvar l_serving_fees_revshare: org.apache.spark.sql.Column = coalesce(serving_fees_revshare, lit(0.0)).cast(DoubleType)\nvar l_commission_cpm: org.apache.spark.sql.Column = coalesce(commission_cpm, lit(0.0)).cast(DoubleType)\nvar l_commission_revshare: org.apache.spark.sql.Column = coalesce(commission_revshare, lit(0.0)).cast(DoubleType)\nvar l_booked_revenue_dollars: org.apache.spark.sql.Column = coalesce(booked_revenue_dollars, lit(0.0)).cast(DoubleType)\nvar l_agg_tl_network_analytics_pb_costs: org.apache.spark.sql.Column = lit(null).cast(StructType(List(StructField(\"total_partner_fees_microcents\", DoubleType, true), StructField(\"total_data_costs_microcents\", DoubleType, true), StructField(\"total_cost_microcents\", DoubleType, true), StructField(\"total_feature_costs_microcents\", DoubleType, true), StructField(\"total_segment_data_costs_microcents\", DoubleType, true))))\nvar l_media_cost_microcents: org.apache.spark.sql.Column = lit(0)\nvar l_serving_fees_microcents: org.apache.spark.sql.Column = lit(0)\nvar l_commissions_microcents: org.apache.spark.sql.Column = lit(0)\nvar l_agg_tl_network_analytics_pb_costs_total_partner_fees_microcents: org.apache.spark.sql.Column = l_total_partner_fees_microcents.cast(DoubleType)\nvar l_agg_tl_network_analytics_pb_costs_total_data_costs_microcents: org.apache.spark.sql.Column = l_total_data_costs_microcents.cast(DoubleType)\nvar l_agg_tl_network_analytics_pb_costs_total_feature_costs_microcents: org.apache.spark.sql.Column = l_total_feature_costs_microcents.cast(DoubleType)\nvar l_agg_tl_network_analytics_pb_costs_total_segment_data_costs_microcents: org.apache.spark.sql.Column = l_total_segment_data_costs_microcents.cast(DoubleType)\nvar l_agg_tl_network_analytics_pb_costs_total_cost_microcents: org.apache.spark.sql.Column = lit(null).cast(DoubleType)\nl_media_cost_microcents = (l_media_cost_dollars_cpm * lit(100000.0)).cast(LongType)\nl_serving_fees_microcents = ((l_serving_fees_cpm + (l_serving_fees_revshare * l_media_cost_dollars_cpm)) * lit(100000.0)).cast(LongType)\nl_commissions_microcents = ((l_commission_cpm + (l_commission_revshare * (l_booked_revenue_dollars * lit(1000.0)))) * lit(100000.0)).cast(LongType)\nl_agg_tl_network_analytics_pb_costs_total_cost_microcents = when(coalesce(imp_type, lit(0)) === lit(6), l_media_cost_microcents).when(((((coalesce(imp_type, lit(0)) === lit(7)) or (coalesce(imp_type, lit(0)) === lit(5))) or (coalesce(imp_type, lit(0)) === lit(11))) or (coalesce(imp_type, lit(0)) === lit(10))) or (coalesce(imp_type, lit(0)) === lit(9)), {\nl_agg_tl_network_analytics_pb_costs_total_cost_microcents = (l_agg_tl_network_analytics_pb_costs_total_data_costs_microcents + l_media_cost_microcents).cast(DoubleType)\nl_agg_tl_network_analytics_pb_costs_total_cost_microcents = when(l_agg_tl_network_analytics_pb_costs_total_partner_fees_microcents > lit(0), l_agg_tl_network_analytics_pb_costs_total_cost_microcents + l_agg_tl_network_analytics_pb_costs_total_partner_fees_microcents).otherwise((l_agg_tl_network_analytics_pb_costs_total_cost_microcents + l_serving_fees_microcents) + l_commissions_microcents).cast(DoubleType)\nl_agg_tl_network_analytics_pb_costs_total_cost_microcents\n}).otherwise(l_agg_tl_network_analytics_pb_costs_total_cost_microcents).cast(DoubleType)\nl_agg_tl_network_analytics_pb_costs = struct(l_agg_tl_network_analytics_pb_costs_total_partner_fees_microcents.as(\"total_partner_fees_microcents\"),l_agg_tl_network_analytics_pb_costs_total_data_costs_microcents.as(\"total_data_costs_microcents\"),l_agg_tl_network_analytics_pb_costs_total_cost_microcents.as(\"total_cost_microcents\"),l_agg_tl_network_analytics_pb_costs_total_feature_costs_microcents.as(\"total_feature_costs_microcents\"),l_agg_tl_network_analytics_pb_costs_total_segment_data_costs_microcents.as(\"total_segment_data_costs_microcents\"))\nl_agg_tl_network_analytics_pb_costs","language":"scala","description":""}