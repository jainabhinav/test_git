{"parameters":[],"isCustomSchemaEnabled":false,"code":"when(\n    is_not_null(\n      when(\n        is_not_null(\n          f_get_transaction_event_pricing(\n            col(\"log_impbus_impressions_pricing.impression_event_pricing\"),\n            col(\"log_impbus_auction_event.auction_event_pricing\"),\n            col(\"log_impbus_impressions_pricing.buyer_charges\"),\n            col(\"log_impbus_impressions_pricing.seller_charges\"),\n            f_should_process_views(\n              col(\"log_dw_view\"),\n              f_transaction_event(\n                col(\"log_impbus_impressions.seller_transaction_def\"),\n                col(\"log_impbus_preempt.seller_transaction_def\")\n              ),\n              f_transaction_event(\n                col(\"log_impbus_impressions.buyer_transaction_def\"),\n                col(\"log_impbus_preempt.buyer_transaction_def\")\n              )\n            )\n          ).getField(\"seller_charges\").getField(\"pricing_terms\")\n        ).cast(BooleanType),\n        v_transaction_event_pricing()\n          .getField(\"seller_charges\")\n          .getField(\"pricing_terms\")\n      ).otherwise(\n        lit(null).cast(\n          ArrayType(\n            StructType(\n              List(\n                StructField(\"term_id\",                 IntegerType, true),\n                StructField(\"amount\",                  DoubleType,  true),\n                StructField(\"rate\",                    DoubleType,  true),\n                StructField(\"is_deduction\",            BooleanType, true),\n                StructField(\"is_media_cost_dependent\", BooleanType, true),\n                StructField(\"data_member_id\",          IntegerType, true)\n              )\n            ),\n            true\n          )\n        )\n      )\n    ).cast(BooleanType),\n    f_convert_pricing_term_amount(\n      when(\n        is_not_null(\n          f_get_transaction_event_pricing(\n            col(\"log_impbus_impressions_pricing.impression_event_pricing\"),\n            col(\"log_impbus_auction_event.auction_event_pricing\"),\n            col(\"log_impbus_impressions_pricing.buyer_charges\"),\n            col(\"log_impbus_impressions_pricing.seller_charges\"),\n            f_should_process_views(\n              col(\"log_dw_view\"),\n              f_transaction_event(\n                col(\"log_impbus_impressions.seller_transaction_def\"),\n                col(\"log_impbus_preempt.seller_transaction_def\")\n              ),\n              f_transaction_event(\n                col(\"log_impbus_impressions.buyer_transaction_def\"),\n                col(\"log_impbus_preempt.buyer_transaction_def\")\n              )\n            )\n          ).getField(\"seller_charges\").getField(\"pricing_terms\")\n        ).cast(BooleanType),\n        v_transaction_event_pricing()\n          .getField(\"seller_charges\")\n          .getField(\"pricing_terms\")\n      ).otherwise(\n        lit(null).cast(\n          ArrayType(\n            StructType(\n              List(\n                StructField(\"term_id\",                 IntegerType, true),\n                StructField(\"amount\",                  DoubleType,  true),\n                StructField(\"rate\",                    DoubleType,  true),\n                StructField(\"is_deduction\",            BooleanType, true),\n                StructField(\"is_media_cost_dependent\", BooleanType, true),\n                StructField(\"data_member_id\",          IntegerType, true)\n              )\n            ),\n            true\n          )\n        )\n      ),\n      lit(1000.0)\n    )\n  ).otherwise(\n    when(\n      is_not_null(\n        f_get_transaction_event_pricing(\n          col(\"log_impbus_impressions_pricing.impression_event_pricing\"),\n          col(\"log_impbus_auction_event.auction_event_pricing\"),\n          col(\"log_impbus_impressions_pricing.buyer_charges\"),\n          col(\"log_impbus_impressions_pricing.seller_charges\"),\n          f_should_process_views(\n            col(\"log_dw_view\"),\n            f_transaction_event(\n              col(\"log_impbus_impressions.seller_transaction_def\"),\n              col(\"log_impbus_preempt.seller_transaction_def\")\n            ),\n            f_transaction_event(\n              col(\"log_impbus_impressions.buyer_transaction_def\"),\n              col(\"log_impbus_preempt.buyer_transaction_def\")\n            )\n          )\n        ).getField(\"seller_charges\").getField(\"pricing_terms\")\n      ).cast(BooleanType),\n      v_transaction_event_pricing()\n        .getField(\"seller_charges\")\n        .getField(\"pricing_terms\")\n    ).otherwise(\n      lit(null).cast(\n        ArrayType(\n          StructType(\n            List(\n              StructField(\"term_id\",                 IntegerType, true),\n              StructField(\"amount\",                  DoubleType,  true),\n              StructField(\"rate\",                    DoubleType,  true),\n              StructField(\"is_deduction\",            BooleanType, true),\n              StructField(\"is_media_cost_dependent\", BooleanType, true),\n              StructField(\"data_member_id\",          IntegerType, true)\n            )\n          ),\n          true\n        )\n      )\n    )\n  )","language":"scala","description":""}