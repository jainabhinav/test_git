{"parameters":[{"name":"cost_pct","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"agg_type","type":"column","metadata":{"description":"","tags":[],"mappings":[]}},{"name":"payment_type","type":"column","metadata":{"description":"","tags":[],"mappings":[]}}],"output":"integer","isCustomSchemaEnabled":true,"code":"var l_agg_type: org.apache.spark.sql.Column =\n    coalesce(agg_type, lit(0)).cast(IntegerType)\n\n  var l_payment_type: org.apache.spark.sql.Column =\n    coalesce(payment_type, lit(0)).cast(IntegerType)\n\n  var l_keep_data_charge: org.apache.spark.sql.Column = lit(0)\n  l_keep_data_charge = when(\n    coalesce(cost_pct, lit(0)) > lit(0),\n    when((f_payment_type_matches(l_agg_type, l_payment_type) === lit(1)).or(\n           f_forward_for_next_stage(l_agg_type, l_payment_type) === lit(1)\n         ),\n         lit(1)\n    ).otherwise(l_keep_data_charge)\n  ).when((coalesce(agg_type, lit(0)) === lit(0))\n            .or(coalesce(agg_type, lit(0)) === lit(4)),\n          lit(1)\n    )\n    .otherwise(l_keep_data_charge)\n    .cast(IntegerType)\n  l_keep_data_charge","language":"scala","description":""}