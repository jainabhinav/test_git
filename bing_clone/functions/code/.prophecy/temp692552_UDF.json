{"initCode":"","code":"udf(\n    (\n      _i:                Integer,\n      _l_curator_margin: Double,\n      _l_is_deduction:   Integer,\n      _l_pricing_terms:  Seq[Row],\n      _l_term_id:        Integer\n    ) => {\n      var i                = _i\n      var l_curator_margin = _l_curator_margin\n      var l_is_deduction   = _l_is_deduction\n      var l_pricing_terms  = _l_pricing_terms.toArray\n      var l_term_id        = _l_term_id\n\n      while (compareTo(i, l_pricing_terms.length) < 0) {\n        l_term_id = 0\n        l_is_deduction = 0\n        if (\n          !_isnull(l_pricing_terms(convertToInt(i)).getAs[Integer](\"term_id\"))\n        )\n          l_term_id = convertToInt(\n            l_pricing_terms(convertToInt(i)).getAs[Integer](\"term_id\")\n          )\n        if (\n          !_isnull(\n            l_pricing_terms(convertToInt(i)).getAs[Boolean](\"is_deduction\")\n          )\n        )\n          l_is_deduction = convertToInt(\n            l_pricing_terms(convertToInt(i)).getAs[Boolean](\"is_deduction\")\n          )\n        if ((l_term_id == 95) && (l_is_deduction == 1)) {\n          if (\n            !_isnull(l_pricing_terms(convertToInt(i)).getAs[Double](\"amount\"))\n          )\n            l_curator_margin = l_curator_margin + l_pricing_terms(\n              convertToInt(i)\n            ).getAs[Double](\"amount\")\n        }\n        i = i + convertToInt(1)\n      }\n\n      Row(convertToInt(l_is_deduction),\n          convertToInt(i),\n          convertToInt(l_term_id),\n          l_curator_margin\n      )\n    },\n    StructType(\n      List(\n        StructField(\"l_is_deduction\",   IntegerType, false),\n        StructField(\"i\",                IntegerType, false),\n        StructField(\"l_term_id\",        IntegerType, false),\n        StructField(\"l_curator_margin\", DoubleType,  false)\n      )\n    )\n  )"}